{"ast":null,"code":"var _jsxFileName = \"/home/maram997/storefront/src/components/product.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { addProduct, addItem } from \"../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n}));\n\nconst Products = props => {\n  _s();\n\n  const classes = useStyle(); // return (\n  //   <Container className={classes.cardGrid} maxWidth=\"md\">\n  //     <Grid container spacing={4}>\n  //       {props.products.map((product) => {\n  //         return (\n  //           <Grid item key={product.name} xs={12} sm={6} md={4}>\n  //             <Card className={classes.card}>\n  //               <CardMedia\n  //                 className={classes.cardMedia}\n  //                 image={product.img}\n  //                 title={product.name}\n  //               />\n  //               <CardContent className={classes.cardContent}>\n  //                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n  //                   {product.name}\n  //                 </Typography>\n  //                 <Typography>\n  //                   Category: {product.categoryAssociation} <br />\n  //                   Price: {product.price} Jd <br />\n  //                   Inventory: {product.inventoryCount}\n  //                 </Typography>\n  //               </CardContent>\n  //               <CardActions>\n  //                 <Button size=\"small\" color=\"primary\">\n  //                   View\n  //                 </Button>\n  //                 <Button\n  //                   size=\"small\"\n  //                   color=\"primary\"\n  //                   onClick={(inventory) => {\n  //                     if (product.inventoryCount) {\n  //                       props.addItem(product);\n  //                       props.addProduct(product);\n  //                     } else {\n  //                       alert(\"empty item\");\n  //                     }\n  //                   }}\n  //                 >\n  //                   Add to Cart\n  //                 </Button>\n  //               </CardActions>\n  //             </Card>\n  //           </Grid>\n  //         );\n  //       })}\n  //     </Grid>\n  //   </Container>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    spacing: 4,\n    children: props.prodReducer.products.filter(product => props.catReducer.activeCategory ? product.category === props.catReducer.activeCategory : true).filter(product => product.inventory > 0).map(product => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: product.url,\n              title: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h6\",\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: product.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"$\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => props.addToCart(product),\n              children: \"Add to cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, product.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c = Products;\n\nconst mapStateToProps = state => ({\n  products: state.productsReducer.activatedProduct\n});\n\nconst mapDispatchToProps = {\n  addItem,\n  addProduct\n}; // addItem to add product when to category\n// addProduct to add product to cart\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/maram997/storefront/src/components/product.js"],"names":["React","Button","Card","CardActions","CardContent","CardMedia","Grid","Typography","Container","makeStyles","connect","addProduct","addItem","useStyle","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","Products","props","classes","root","prodReducer","products","filter","product","catReducer","activeCategory","category","inventory","map","media","url","name","description","price","addToCart","mapStateToProps","state","productsReducer","activatedProduct","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { addProduct, addItem } from \"../store/actions\";\n\nconst useStyle = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Products = (props) => {\n  const classes = useStyle();\n  // return (\n  //   <Container className={classes.cardGrid} maxWidth=\"md\">\n  //     <Grid container spacing={4}>\n  //       {props.products.map((product) => {\n  //         return (\n  //           <Grid item key={product.name} xs={12} sm={6} md={4}>\n  //             <Card className={classes.card}>\n  //               <CardMedia\n  //                 className={classes.cardMedia}\n  //                 image={product.img}\n  //                 title={product.name}\n  //               />\n  //               <CardContent className={classes.cardContent}>\n  //                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n  //                   {product.name}\n  //                 </Typography>\n  //                 <Typography>\n  //                   Category: {product.categoryAssociation} <br />\n  //                   Price: {product.price} Jd <br />\n  //                   Inventory: {product.inventoryCount}\n  //                 </Typography>\n  //               </CardContent>\n  //               <CardActions>\n  //                 <Button size=\"small\" color=\"primary\">\n  //                   View\n  //                 </Button>\n  //                 <Button\n  //                   size=\"small\"\n  //                   color=\"primary\"\n  //                   onClick={(inventory) => {\n  //                     if (product.inventoryCount) {\n  //                       props.addItem(product);\n  //                       props.addProduct(product);\n  //                     } else {\n  //                       alert(\"empty item\");\n  //                     }\n  //                   }}\n  //                 >\n  //                   Add to Cart\n  //                 </Button>\n  //               </CardActions>\n  //             </Card>\n  //           </Grid>\n  //         );\n  //       })}\n  //     </Grid>\n  //   </Container>\n  // );\n\n  return (\n    <Grid className={classes.root} container spacing={4} >\n        {props.prodReducer.products\n            .filter(product => props.catReducer.activeCategory ? product.category === props.catReducer.activeCategory : true)\n            .filter(product => product.inventory > 0)\n            .map(product => {\n                return (\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={product.name}>\n                        <Card variant=\"outlined\" className={classes.card}>\n                            <CardActionArea>\n\n                                <CardMedia\n                                    className={classes.media}\n                                    image={product.url}\n                                    title={product.name}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h6\">{product.name}</Typography>\n                                    <Typography color=\"textSecondary\" variant=\"body2\">{product.description}</Typography>\n                                    <Typography variant=\"body1\">${product.price}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button color=\"primary\" onClick={() => props.addToCart(product)}>Add to cart</Button>\n                                <Button color=\"primary\">Details</Button>\n                            </CardActions>\n\n                        </Card>\n                    </Grid>\n                )\n            })}\n    </Grid>\n)\n\n}\n\n\nconst mapStateToProps = (state) => ({\n  products: state.productsReducer.activatedProduct,\n  \n})\n\nconst mapDispatchToProps = { addItem, addProduct };\n// addItem to add product when to category\n// addProduct to add product to cart\nexport default connect(mapStateToProps,mapDispatchToProps)(Products);\n\n\n"]},"metadata":{},"sourceType":"module"}