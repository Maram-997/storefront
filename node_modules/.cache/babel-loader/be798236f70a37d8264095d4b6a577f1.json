{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { addProduct, addItem } from \"../store/actions\";\nconst useStyle = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n}));\n\nconst Products = props => {\n  _s();\n\n  const classes = useStyle(); // return (\n  //   <Container className={classes.cardGrid} maxWidth=\"md\">\n  //     <Grid container spacing={4}>\n  //       {props.products.map((product) => {\n  //         return (\n  //           <Grid item key={product.name} xs={12} sm={6} md={4}>\n  //             <Card className={classes.card}>\n  //               <CardMedia\n  //                 className={classes.cardMedia}\n  //                 image={product.img}\n  //                 title={product.name}\n  //               />\n  //               <CardContent className={classes.cardContent}>\n  //                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n  //                   {product.name}\n  //                 </Typography>\n  //                 <Typography>\n  //                   Category: {product.categoryAssociation} <br />\n  //                   Price: {product.price} Jd <br />\n  //                   Inventory: {product.inventoryCount}\n  //                 </Typography>\n  //               </CardContent>\n  //               <CardActions>\n  //                 <Button size=\"small\" color=\"primary\">\n  //                   View\n  //                 </Button>\n  //                 <Button\n  //                   size=\"small\"\n  //                   color=\"primary\"\n  //                   onClick={(inventory) => {\n  //                     if (product.inventoryCount) {\n  //                       props.addItem(product);\n  //                       props.addProduct(product);\n  //                     } else {\n  //                       alert(\"empty item\");\n  //                     }\n  //                   }}\n  //                 >\n  //                   Add to Cart\n  //                 </Button>\n  //               </CardActions>\n  //             </Card>\n  //           </Grid>\n  //         );\n  //       })}\n  //     </Grid>\n  //   </Container>\n  // );\n};\n\n_s(Products, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c = Products;\n\nconst mapStateToProps = state => ({\n  products: state.productsReducer.activatedProduct\n});\n\nconst mapDispatchToProps = {\n  addItem,\n  addProduct\n}; // addItem to add product when to category\n// addProduct to add product to cart\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/maram997/storefront/src/components/product.js"],"names":["React","Button","Card","CardActions","CardContent","CardMedia","Grid","Typography","Container","makeStyles","connect","addProduct","addItem","useStyle","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","Products","props","classes","mapStateToProps","state","products","productsReducer","activatedProduct","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AAEA,MAAMC,QAAQ,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACtCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAERC,IAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAD4B;AAKtCE,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE;AAHX,GALgC;AAUtCC,EAAAA,SAAS,EAAE;AACTP,IAAAA,UAAU,EAAE;AADH,GAV2B;AAatCQ,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE;AADC;AAbyB,CAAZ,CAAD,CAA3B;;AAkBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,OAAO,GAAGf,QAAQ,EAAxB,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,CAnDD;;GAAMa,Q;UACYb,Q;;;KADZa,Q;;AAsDN,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,QAAQ,EAAED,KAAK,CAACE,eAAN,CAAsBC;AADE,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAG;AAAEtB,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAA3B,C,CACA;AACA;;AACA,eAAeD,OAAO,CAACmB,eAAD,EAAiBK,kBAAjB,CAAP,CAA4CR,QAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { addProduct, addItem } from \"../store/actions\";\n\nconst useStyle = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Products = (props) => {\n  const classes = useStyle();\n  // return (\n  //   <Container className={classes.cardGrid} maxWidth=\"md\">\n  //     <Grid container spacing={4}>\n  //       {props.products.map((product) => {\n  //         return (\n  //           <Grid item key={product.name} xs={12} sm={6} md={4}>\n  //             <Card className={classes.card}>\n  //               <CardMedia\n  //                 className={classes.cardMedia}\n  //                 image={product.img}\n  //                 title={product.name}\n  //               />\n  //               <CardContent className={classes.cardContent}>\n  //                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n  //                   {product.name}\n  //                 </Typography>\n  //                 <Typography>\n  //                   Category: {product.categoryAssociation} <br />\n  //                   Price: {product.price} Jd <br />\n  //                   Inventory: {product.inventoryCount}\n  //                 </Typography>\n  //               </CardContent>\n  //               <CardActions>\n  //                 <Button size=\"small\" color=\"primary\">\n  //                   View\n  //                 </Button>\n  //                 <Button\n  //                   size=\"small\"\n  //                   color=\"primary\"\n  //                   onClick={(inventory) => {\n  //                     if (product.inventoryCount) {\n  //                       props.addItem(product);\n  //                       props.addProduct(product);\n  //                     } else {\n  //                       alert(\"empty item\");\n  //                     }\n  //                   }}\n  //                 >\n  //                   Add to Cart\n  //                 </Button>\n  //               </CardActions>\n  //             </Card>\n  //           </Grid>\n  //         );\n  //       })}\n  //     </Grid>\n  //   </Container>\n  // );\n\n}\n\n\nconst mapStateToProps = (state) => ({\n  products: state.productsReducer.activatedProduct,\n  \n})\n\nconst mapDispatchToProps = { addItem, addProduct };\n// addItem to add product when to category\n// addProduct to add product to cart\nexport default connect(mapStateToProps,mapDispatchToProps)(Products);\n\n\n"]},"metadata":{},"sourceType":"module"}